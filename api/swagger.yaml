---
swagger: "2.0"
info:
  description: >-
    <div class="postman-run-button"
    data-postman-action="collection/import"
    data-postman-var-1="c3d1fba63cf14cdfeb06"></div>
        <script type="text/javascript">
          (function (p, o, s, t, m, a, n) {
            !p[s] && (p[s] = function () {
              (p[t] || (p[t] = [])).push(arguments);
            });
            !o.getElementById(s + t) && o.getElementsByTagName("head")[0].appendChild((
              (n = o.createElement("script")),
              (n.id = s + t), (n.async = 1), (n.src = m), n
            ));
          }(window, document, "_pm", "PostmanRunObject", "https://run.pstmn.io/button.js"));
        </script>
  version: "1.0.0"
  title: "Swagger renders"
  termsOfService: "http://helloreverb.com/terms/"
  contact:
    name: "Swagger API team"
    url: "http://swagger.io"
    email: "foo@example.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "api-renders.herokuapp.com"
basePath: "/api/v1"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /renders:
    get:
      tags:
      - "render"
      description: "Returns all renders"
      operationId: "getRenders"
      parameters: 
      - name: "id"
        in: "query"
        description: "Id of an existing render"
        required: false
        type: "string"        
      - name: "type"
        in: "query"
        description: "Type of an existing render"
        required: false
        type: "string"
      responses:
        200:
          description: "Render response"
          schema:
            type: "array"
            title: "Renders"
            items:
              $ref: "#/definitions/Render"
        500:
          description: "Internal Server Error"
      x-swagger-router-controller: "Render"
    post:
      tags:
        - "render"
      description: "Insert a new render"
      operationId: "insertRender"
      parameters:
      - name: "render"
        in: body
        description: "The render JSON you want to post"
        required: true
        schema: 
          title: "Renders"
          type: "array"
          items:
            $ref: "#/definitions/Render"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad request"
        409:
          description: "Conflict"
        422:
          description: "Unprocessable Entity"
        500:
          description: "Internal Server Error"
      x-swagger-router-controller: "Render"  
  /renders/{id}:
    delete:
      tags:
      - "render"
      description: "Delete an existing render"
      operationId: "deleteRender"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of an existing render"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted render"
        400:
          description: "Bad request"
        404:
          description: "Not found"
      x-swagger-router-controller: "Render"                     
definitions:
  Render:
    type: "object"
    properties:
      id:
        type: "string"
      sampleModel:
        type: "string"
      view:
        type: "string"
      ctrl:
        type: "string"
      type:
        type: "string"
